{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1695114863066},{"_id":"source/_posts/test.md","hash":"6ca23c6bdc2794b39ac3011f0ff137d135f2a813","modified":1695123783000},{"_id":"source/_posts/Git/Obsidian Git初使用.md","hash":"21968015266535f9de6e4c66ab9f407b39aef02d","modified":1695127204622},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1695121494258},{"_id":"source/_posts/Git/Git操作.md","hash":"9b52caa6ef5ce7c88719e1c823c68ed67925423a","modified":1695127204622},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"cdde6c6d6a1bdf9fb965313e21d92cf6213582b6","modified":1695121494262},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1695121494162},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"49f681a203eecfa7127ac22edc13bd3b49693d0a","modified":1695121494226},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1695121494262},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"b2c283d4e9aaf9ba49b8abb81adc03117b0e07db","modified":1695121494226},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1695121494262},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1695121494262},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1695121494262},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1695121494262},{"_id":"node_modules/hexo-theme-fluid/layout/.DS_Store","hash":"e2295dbe42d85b294e6f3aeefaf3623bd31759ed","modified":1695121494162},{"_id":"node_modules/hexo-theme-fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1695121494262},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1695121494162},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"9b4c154462ce78de4c9ea7dd15dce4ca8e8c1cf8","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1695121494172},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1695121494178},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1695121494162},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1695121494180},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"f96a22f989897ecddc69d5867a206e1cf6b8f610","modified":1695121494262},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"75ab6958d929e92566ca580d0b8bd0eeae10649a","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1695121494262},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1695121494262},{"_id":"node_modules/hexo-theme-fluid/scripts/.DS_Store","hash":"daec53fd4601c37ca272321ba2eb594d9b0a43ac","modified":1695121494162},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/source/.DS_Store","hash":"e11e97632e6d13d5b9dccadcc514268f3c039508","modified":1695121494162},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1695121494172},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1695121494180},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1695121494178},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1695121494192},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1695121494210},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/scripts/events/.DS_Store","hash":"80308812974d7cb7e001cd8f64ff9fced30ff139","modified":1695121494162},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"0047666f996c54017e06668b5242ed8a311ebce0","modified":1695121494222},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/index-generator.js","hash":"9159fc22fa84a7b605dd15fe4104f01fe9c71147","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"9ac5ddad06e9b0e6015ce531430018182a4bc0fa","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1695121494202},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1695121494202},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1695121494210},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1695121494210},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"e3b456a079e5dc0032473b516c865b20f83d2c26","modified":1695121494222},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"8e67b522c47aa250860e3fe2c733f1f958a506c0","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1695121494226},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1695121494222},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1695121494226},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"4543b8954c5c2ca91191cc0d53cf071b3f26faaa","modified":1695121494226},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":1695121494226},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1695121494202},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1695121494202},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d3e75f53c59674d171309e50702954671f31f1a4","modified":1695121494222},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1695121494226},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1695121494222},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1695121494162},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1695121494258},{"_id":"node_modules/hexo-theme-fluid/source/img/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1695121494162},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1695121494226},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1695121494162},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1695121494202},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1695121494202},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1695121494232},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1695121494222},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1695121494222},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1695121494232},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1695121494180},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1695121494252},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1695121494226},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/discuss.ejs","hash":"98d065b58ce06b7d18bff3c974e96fa0f34ae03a","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"d84bcb5ccd78470a60c067fc914ac0ac67ac8777","modified":1695121494202},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1695121494172},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1695121494202},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1695121494202},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1695121494202},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"4f68c80bd1395e2f6d11e373116e54de11cb62e8","modified":1695121494172},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"870db75e4e403a840c4463dfeed2c9114846e7cc","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1695121494172},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1695121494180},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"0fff24cf5bf99fbe5c56c292e2eac4a89bf29db4","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1695121494172},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"03ac02762f801970d1c4e73d6ec8d4c503780e50","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1695121494192},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1695121494178},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"375974ec017696e294dc12469fb0ae257800dc2d","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"f345374885cd6a334f09a11f59c443b5d577c06c","modified":1695121494202},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"529f3069742b3d338c769ba2d836e7f3c342a09d","modified":1695121494182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1695121494194},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1695121494202},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1695121494202},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"b2f61b91fffb17d11ad56811f07d52d23f012741","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"8d3ae1ec6660fbb0e563bc08c2f8deefde1f3bf6","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1695121494212},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1695121494232},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1695121494232},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1695121494232},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1695121494232},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1695121494252},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1695121494232},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"e413212e5a667d5b8299c4d2a39c4dfa1378d119","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1695121494252},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/print.styl","hash":"166afbc596ea4b552bad7290ec372d25ec34db7b","modified":1695121494258},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1695121494252},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"ecf3488566b374d564ae985c61e08562ba908023","modified":1695121494252},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1695121494252},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1695121494232},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":1695121494252},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1695121494232},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1695121494258},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1695121494252},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1695121494242},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1695121494252},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1695121494258},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1695121494252},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1695121494252},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1695121494258},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1695121494258},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1695121494258},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1695121494232},{"_id":"public/local-search.xml","hash":"fab0788e8b8800798a376f82a9dee6f9a5d96c30","modified":1695127203516},{"_id":"public/archives/index.html","hash":"917468134f33ab108f928885036900300249dac9","modified":1695127203516},{"_id":"public/archives/2023/index.html","hash":"c73e4c0335147a987d1c8544494940896cf6f26b","modified":1695127203516},{"_id":"public/archives/2023/09/index.html","hash":"40b81dfbd100261a2b2861e5fa0a43e1ba8926b9","modified":1695127203516},{"_id":"public/index.html","hash":"884ed47fac612b7f643f86a138546e3237f05bfc","modified":1695127203516},{"_id":"public/404.html","hash":"991996ff5308f636305faaa0dc5de25f5359266f","modified":1695127203516},{"_id":"public/tags/index.html","hash":"fb52034eb28e312cb00c7a5277bd821ae0840f95","modified":1695127203516},{"_id":"public/categories/index.html","hash":"6989cff724c94e898661d9f77749584e37b3c172","modified":1695127203516},{"_id":"public/links/index.html","hash":"46982e11548e47f87ece983f0c35f83912fcabbf","modified":1695127203516},{"_id":"public/2023/09/19/Git/Obsidian Git初使用/index.html","hash":"17fa2d848c44df747d94faaad42e5ee33d65227a","modified":1695127203516},{"_id":"public/2023/09/19/Git/Git操作/index.html","hash":"32f9464d132a6143543aab9993ecde7eeffdf83c","modified":1695127203516},{"_id":"public/2023/09/19/test/index.html","hash":"b6c0467dc868c77ef8c5623cd8fa8a103482c06b","modified":1695127203516},{"_id":"public/2023/09/19/hello-world/index.html","hash":"58004a30b2d42af5590d138a3bf53cf60217e6ba","modified":1695127203516},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1695127203516},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1695127203516},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1695127203516},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1695127203516},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1695127203516},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1695127203516},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1695127203516},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1695127203516},{"_id":"public/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1695127203516},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1695127203516},{"_id":"public/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1695127203516},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1695127203516},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1695127203516},{"_id":"public/css/highlight.css","hash":"0f9a477d33d3b15ebe7e163e756fb7c54c7ded6b","modified":1695127203516},{"_id":"public/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1695127203516},{"_id":"public/css/highlight-dark.css","hash":"2b0daa6e5343da9dbb26d617d224b8397e48556b","modified":1695127203516},{"_id":"public/css/main.css","hash":"526a4522eb54bb51772f51fb98295dc4fe03429f","modified":1695127203516},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1695127203516}],"Category":[{"name":"Git","_id":"clmqazdwk0000lwu53yz7653k"}],"Data":[],"Page":[],"Post":[{"title":"test","date":"2023-09-19T11:42:24.000Z","_content":"this is a test.","source":"_posts/test.md","raw":"---\ntitle: test\ndate: 2023-09-19 19:42:24\ntags:\n---\nthis is a test.","slug":"test","published":1,"updated":"2023-09-19T11:43:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmqayxn300008cu5eokm9jtc","content":"<p>this is a test.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>this is a test.</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-09-19T10:56:07.981Z","updated":"2023-09-19T09:14:23.066Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmqayxn600018cu5dq94fqpy","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"Git操作","_content":"\n[Git 教程 | 菜鸟教程](https://www.runoob.com/git/git-tutorial.html)\n### Git配置\nGit 提供了一个叫做 git config 的工具，专门用来配置或读取相应的工作环境变量。\n这些环境变量，决定了 Git 在各个环节的具体工作方式和行为。这些变量可以存放在以下三个不同的地方：\n\n- `/etc/gitconfig` 文件：系统中对所有用户都普遍适用的配置。若使用 `git config` 时用 `--system` 选项，读写的就是这个文件。\n- `~/.gitconfig` 文件：用户目录下的配置文件只适用于该用户。若使用 `git config` 时用 `--global` 选项，读写的就是这个文件。\n- 当前项目的 Git 目录中的配置文件（也就是工作目录中的 `.git/config` 文件）：这里的配置仅仅针对当前项目有效。每一个级别的配置都会覆盖上层的相同配置，所以 `.git/config` 里的配置会覆盖 `/etc/gitconfig` 中的同名变量。\n\n### Git创建仓库\n#### git init\n\nGit 使用 **git init** 命令来初始化一个 Git 仓库，Git 的很多命令都需要在 Git 的仓库中运行，所以 **git init** 是使用 Git 的第一个命令。\n\n在执行完成 **git init** 命令后，Git 仓库会生成一个 .git 目录，该目录包含了资源的所有元数据，其他的项目目录保持不变。\n\n如果当前目录下有几个文件想要纳入版本控制，需要先用 git add 命令告诉 Git 开始对这些文件进行跟踪，然后提交：\n\n```\n$ git add *.c\n$ git add README\n$ git commit -m '初始化项目版本'\n```\n以上命令将目录下以 .c 结尾及 README 文件提交到仓库中。\n\n#### git clone\n\n我们使用 **git clone** 从现有 Git 仓库中拷贝项目\n克隆仓库的命令格式为：\n\n```\ngit clone <repo>\n```\n\n如果我们需要克隆到指定的目录，可以使用以下命令格式：\n\n```\ngit clone <repo> <directory>\n```\n\n**参数说明：**\n- **repo:** Git 仓库。\n- **directory:** 本地目录。\n\n### Git 基本操作\nGit 常用的是以下 6 个命令：**git clone**、**git push**、**git add** 、**git commit**、**git checkout**、**git pull**\n![[Pasted image 20230829224733.png]]\n\n#### Git工作区、暂存库和版本库\n\n- **工作区：** 电脑中的文件目录\n- **暂存区：** 英文叫 stage 或 index。一般存放在 .git 目录下的 index 文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。\n- **版本库：** 工作区有一个隐藏目录 .git，这个不算工作区，而是 Git 的版本库。\n\nUser在工作区修改文件，通过`git add`添加到暂存区，再通过`git commit`添加到版本库，再通过`git push`添加到远程仓库\n\n**说明：**\n- workspace：工作区\n- staging area：暂存区/缓存区\n- local repository：版本库或本地仓库\n- remote repository：远程仓库\n\n| 命令         | 说明                                     |\n| ------------ | ---------------------------------------- |\n| `git add`    | 添加文件到暂存区                         |\n| `git status` | 查看仓库当前的状态，显示有变更的文件。   |\n| `git diff`   | 比较文件的不同，即暂存区和工作区的差异。 |\n| `git commit` | 提交暂存区到本地仓库。                   |\n| `git reset`  | 回退版本。                               |\n| `git rm`     | 将文件从暂存区和工作区中删除。           |\n| `git mv`     | 移动或重命名工作区文件。                 |\n| `git remote` | 远程仓库操作                             |\n| `git fetch`  | 从远程获取代码库                         |\n| `git pull`   | 下载远程代码并合并                       |\n| `git push`   | 上传远程代码并合并                       |\n\n### Git 分支管理\n创建分支命令：\n\n```\ngit branch (branchname)\n```\n\n切换分支命令:\n\n```\ngit checkout (branchname)\n```\n\n当你切换分支的时候，Git 会用该分支的最后提交的快照替换你的工作目录的内容， 所以多个分支不需要多个目录。\n合并分支命令:\n\n```\ngit merge\n```\n![[Pasted image 20230829225716.png]]\n\n合并后删除无用分支：\n\n```\ngit branch -d newtest\n```\n\n","source":"_posts/Git/Git操作.md","raw":"---\ntitle: Git操作\ncategories:\n  - Git\n---\n\n[Git 教程 | 菜鸟教程](https://www.runoob.com/git/git-tutorial.html)\n### Git配置\nGit 提供了一个叫做 git config 的工具，专门用来配置或读取相应的工作环境变量。\n这些环境变量，决定了 Git 在各个环节的具体工作方式和行为。这些变量可以存放在以下三个不同的地方：\n\n- `/etc/gitconfig` 文件：系统中对所有用户都普遍适用的配置。若使用 `git config` 时用 `--system` 选项，读写的就是这个文件。\n- `~/.gitconfig` 文件：用户目录下的配置文件只适用于该用户。若使用 `git config` 时用 `--global` 选项，读写的就是这个文件。\n- 当前项目的 Git 目录中的配置文件（也就是工作目录中的 `.git/config` 文件）：这里的配置仅仅针对当前项目有效。每一个级别的配置都会覆盖上层的相同配置，所以 `.git/config` 里的配置会覆盖 `/etc/gitconfig` 中的同名变量。\n\n### Git创建仓库\n#### git init\n\nGit 使用 **git init** 命令来初始化一个 Git 仓库，Git 的很多命令都需要在 Git 的仓库中运行，所以 **git init** 是使用 Git 的第一个命令。\n\n在执行完成 **git init** 命令后，Git 仓库会生成一个 .git 目录，该目录包含了资源的所有元数据，其他的项目目录保持不变。\n\n如果当前目录下有几个文件想要纳入版本控制，需要先用 git add 命令告诉 Git 开始对这些文件进行跟踪，然后提交：\n\n```\n$ git add *.c\n$ git add README\n$ git commit -m '初始化项目版本'\n```\n以上命令将目录下以 .c 结尾及 README 文件提交到仓库中。\n\n#### git clone\n\n我们使用 **git clone** 从现有 Git 仓库中拷贝项目\n克隆仓库的命令格式为：\n\n```\ngit clone <repo>\n```\n\n如果我们需要克隆到指定的目录，可以使用以下命令格式：\n\n```\ngit clone <repo> <directory>\n```\n\n**参数说明：**\n- **repo:** Git 仓库。\n- **directory:** 本地目录。\n\n### Git 基本操作\nGit 常用的是以下 6 个命令：**git clone**、**git push**、**git add** 、**git commit**、**git checkout**、**git pull**\n![[Pasted image 20230829224733.png]]\n\n#### Git工作区、暂存库和版本库\n\n- **工作区：** 电脑中的文件目录\n- **暂存区：** 英文叫 stage 或 index。一般存放在 .git 目录下的 index 文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。\n- **版本库：** 工作区有一个隐藏目录 .git，这个不算工作区，而是 Git 的版本库。\n\nUser在工作区修改文件，通过`git add`添加到暂存区，再通过`git commit`添加到版本库，再通过`git push`添加到远程仓库\n\n**说明：**\n- workspace：工作区\n- staging area：暂存区/缓存区\n- local repository：版本库或本地仓库\n- remote repository：远程仓库\n\n| 命令         | 说明                                     |\n| ------------ | ---------------------------------------- |\n| `git add`    | 添加文件到暂存区                         |\n| `git status` | 查看仓库当前的状态，显示有变更的文件。   |\n| `git diff`   | 比较文件的不同，即暂存区和工作区的差异。 |\n| `git commit` | 提交暂存区到本地仓库。                   |\n| `git reset`  | 回退版本。                               |\n| `git rm`     | 将文件从暂存区和工作区中删除。           |\n| `git mv`     | 移动或重命名工作区文件。                 |\n| `git remote` | 远程仓库操作                             |\n| `git fetch`  | 从远程获取代码库                         |\n| `git pull`   | 下载远程代码并合并                       |\n| `git push`   | 上传远程代码并合并                       |\n\n### Git 分支管理\n创建分支命令：\n\n```\ngit branch (branchname)\n```\n\n切换分支命令:\n\n```\ngit checkout (branchname)\n```\n\n当你切换分支的时候，Git 会用该分支的最后提交的快照替换你的工作目录的内容， 所以多个分支不需要多个目录。\n合并分支命令:\n\n```\ngit merge\n```\n![[Pasted image 20230829225716.png]]\n\n合并后删除无用分支：\n\n```\ngit branch -d newtest\n```\n\n","slug":"Git/Git操作","published":1,"date":"2023-09-19T12:38:33.932Z","updated":"2023-09-19T12:40:04.622Z","_id":"clmqayxn700028cu5epgf4pyr","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a href=\"https://www.runoob.com/git/git-tutorial.html\">Git 教程 | 菜鸟教程</a></p>\n<h3 id=\"Git配置\"><a href=\"#Git配置\" class=\"headerlink\" title=\"Git配置\"></a>Git配置</h3><p>Git 提供了一个叫做 git config 的工具，专门用来配置或读取相应的工作环境变量。<br>这些环境变量，决定了 Git 在各个环节的具体工作方式和行为。这些变量可以存放在以下三个不同的地方：</p>\n<ul>\n<li><code>/etc/gitconfig</code> 文件：系统中对所有用户都普遍适用的配置。若使用 <code>git config</code> 时用 <code>--system</code> 选项，读写的就是这个文件。</li>\n<li><code>~/.gitconfig</code> 文件：用户目录下的配置文件只适用于该用户。若使用 <code>git config</code> 时用 <code>--global</code> 选项，读写的就是这个文件。</li>\n<li>当前项目的 Git 目录中的配置文件（也就是工作目录中的 <code>.git/config</code> 文件）：这里的配置仅仅针对当前项目有效。每一个级别的配置都会覆盖上层的相同配置，所以 <code>.git/config</code> 里的配置会覆盖 <code>/etc/gitconfig</code> 中的同名变量。</li>\n</ul>\n<h3 id=\"Git创建仓库\"><a href=\"#Git创建仓库\" class=\"headerlink\" title=\"Git创建仓库\"></a>Git创建仓库</h3><h4 id=\"git-init\"><a href=\"#git-init\" class=\"headerlink\" title=\"git init\"></a>git init</h4><p>Git 使用 <strong>git init</strong> 命令来初始化一个 Git 仓库，Git 的很多命令都需要在 Git 的仓库中运行，所以 <strong>git init</strong> 是使用 Git 的第一个命令。</p>\n<p>在执行完成 <strong>git init</strong> 命令后，Git 仓库会生成一个 .git 目录，该目录包含了资源的所有元数据，其他的项目目录保持不变。</p>\n<p>如果当前目录下有几个文件想要纳入版本控制，需要先用 git add 命令告诉 Git 开始对这些文件进行跟踪，然后提交：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">$ git <span class=\"hljs-built_in\">add</span> *.c<br>$ git <span class=\"hljs-built_in\">add</span> README<br>$ git commit -m <span class=\"hljs-string\">&#x27;初始化项目版本&#x27;</span><br></code></pre></td></tr></table></figure>\n<p>以上命令将目录下以 .c 结尾及 README 文件提交到仓库中。</p>\n<h4 id=\"git-clone\"><a href=\"#git-clone\" class=\"headerlink\" title=\"git clone\"></a>git clone</h4><p>我们使用 <strong>git clone</strong> 从现有 Git 仓库中拷贝项目<br>克隆仓库的命令格式为：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">git <span class=\"hljs-keyword\">clone</span> <span class=\"hljs-title\">&lt;repo</span>&gt;<br></code></pre></td></tr></table></figure>\n\n<p>如果我们需要克隆到指定的目录，可以使用以下命令格式：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">git <span class=\"hljs-keyword\">clone</span> <span class=\"hljs-title\">&lt;repo</span>&gt; <span class=\"hljs-tag\">&lt;directory&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>参数说明：</strong></p>\n<ul>\n<li><strong>repo:</strong> Git 仓库。</li>\n<li><strong>directory:</strong> 本地目录。</li>\n</ul>\n<h3 id=\"Git-基本操作\"><a href=\"#Git-基本操作\" class=\"headerlink\" title=\"Git 基本操作\"></a>Git 基本操作</h3><p>Git 常用的是以下 6 个命令：<strong>git clone</strong>、<strong>git push</strong>、<strong>git add</strong> 、<strong>git commit</strong>、<strong>git checkout</strong>、<strong>git pull</strong><br>![[Pasted image 20230829224733.png]]</p>\n<h4 id=\"Git工作区、暂存库和版本库\"><a href=\"#Git工作区、暂存库和版本库\" class=\"headerlink\" title=\"Git工作区、暂存库和版本库\"></a>Git工作区、暂存库和版本库</h4><ul>\n<li><strong>工作区：</strong> 电脑中的文件目录</li>\n<li><strong>暂存区：</strong> 英文叫 stage 或 index。一般存放在 .git 目录下的 index 文件（.git&#x2F;index）中，所以我们把暂存区有时也叫作索引（index）。</li>\n<li><strong>版本库：</strong> 工作区有一个隐藏目录 .git，这个不算工作区，而是 Git 的版本库。</li>\n</ul>\n<p>User在工作区修改文件，通过<code>git add</code>添加到暂存区，再通过<code>git commit</code>添加到版本库，再通过<code>git push</code>添加到远程仓库</p>\n<p><strong>说明：</strong></p>\n<ul>\n<li>workspace：工作区</li>\n<li>staging area：暂存区&#x2F;缓存区</li>\n<li>local repository：版本库或本地仓库</li>\n<li>remote repository：远程仓库</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>git add</code></td>\n<td>添加文件到暂存区</td>\n</tr>\n<tr>\n<td><code>git status</code></td>\n<td>查看仓库当前的状态，显示有变更的文件。</td>\n</tr>\n<tr>\n<td><code>git diff</code></td>\n<td>比较文件的不同，即暂存区和工作区的差异。</td>\n</tr>\n<tr>\n<td><code>git commit</code></td>\n<td>提交暂存区到本地仓库。</td>\n</tr>\n<tr>\n<td><code>git reset</code></td>\n<td>回退版本。</td>\n</tr>\n<tr>\n<td><code>git rm</code></td>\n<td>将文件从暂存区和工作区中删除。</td>\n</tr>\n<tr>\n<td><code>git mv</code></td>\n<td>移动或重命名工作区文件。</td>\n</tr>\n<tr>\n<td><code>git remote</code></td>\n<td>远程仓库操作</td>\n</tr>\n<tr>\n<td><code>git fetch</code></td>\n<td>从远程获取代码库</td>\n</tr>\n<tr>\n<td><code>git pull</code></td>\n<td>下载远程代码并合并</td>\n</tr>\n<tr>\n<td><code>git push</code></td>\n<td>上传远程代码并合并</td>\n</tr>\n</tbody></table>\n<h3 id=\"Git-分支管理\"><a href=\"#Git-分支管理\" class=\"headerlink\" title=\"Git 分支管理\"></a>Git 分支管理</h3><p>创建分支命令：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">git <span class=\"hljs-title function_\">branch</span> <span class=\"hljs-params\">(branchname)</span><br></code></pre></td></tr></table></figure>\n\n<p>切换分支命令:</p>\n<figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gcode\">git checkout <span class=\"hljs-comment\">(branchname)</span><br></code></pre></td></tr></table></figure>\n\n<p>当你切换分支的时候，Git 会用该分支的最后提交的快照替换你的工作目录的内容， 所以多个分支不需要多个目录。<br>合并分支命令:</p>\n<figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cos\">git <span class=\"hljs-keyword\">merge</span><br></code></pre></td></tr></table></figure>\n<p>![[Pasted image 20230829225716.png]]</p>\n<p>合并后删除无用分支：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">git branch -d newtest</span><br></code></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.runoob.com/git/git-tutorial.html\">Git 教程 | 菜鸟教程</a></p>\n<h3 id=\"Git配置\"><a href=\"#Git配置\" class=\"headerlink\" title=\"Git配置\"></a>Git配置</h3><p>Git 提供了一个叫做 git config 的工具，专门用来配置或读取相应的工作环境变量。<br>这些环境变量，决定了 Git 在各个环节的具体工作方式和行为。这些变量可以存放在以下三个不同的地方：</p>\n<ul>\n<li><code>/etc/gitconfig</code> 文件：系统中对所有用户都普遍适用的配置。若使用 <code>git config</code> 时用 <code>--system</code> 选项，读写的就是这个文件。</li>\n<li><code>~/.gitconfig</code> 文件：用户目录下的配置文件只适用于该用户。若使用 <code>git config</code> 时用 <code>--global</code> 选项，读写的就是这个文件。</li>\n<li>当前项目的 Git 目录中的配置文件（也就是工作目录中的 <code>.git/config</code> 文件）：这里的配置仅仅针对当前项目有效。每一个级别的配置都会覆盖上层的相同配置，所以 <code>.git/config</code> 里的配置会覆盖 <code>/etc/gitconfig</code> 中的同名变量。</li>\n</ul>\n<h3 id=\"Git创建仓库\"><a href=\"#Git创建仓库\" class=\"headerlink\" title=\"Git创建仓库\"></a>Git创建仓库</h3><h4 id=\"git-init\"><a href=\"#git-init\" class=\"headerlink\" title=\"git init\"></a>git init</h4><p>Git 使用 <strong>git init</strong> 命令来初始化一个 Git 仓库，Git 的很多命令都需要在 Git 的仓库中运行，所以 <strong>git init</strong> 是使用 Git 的第一个命令。</p>\n<p>在执行完成 <strong>git init</strong> 命令后，Git 仓库会生成一个 .git 目录，该目录包含了资源的所有元数据，其他的项目目录保持不变。</p>\n<p>如果当前目录下有几个文件想要纳入版本控制，需要先用 git add 命令告诉 Git 开始对这些文件进行跟踪，然后提交：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">$ git <span class=\"hljs-built_in\">add</span> *.c<br>$ git <span class=\"hljs-built_in\">add</span> README<br>$ git commit -m <span class=\"hljs-string\">&#x27;初始化项目版本&#x27;</span><br></code></pre></td></tr></table></figure>\n<p>以上命令将目录下以 .c 结尾及 README 文件提交到仓库中。</p>\n<h4 id=\"git-clone\"><a href=\"#git-clone\" class=\"headerlink\" title=\"git clone\"></a>git clone</h4><p>我们使用 <strong>git clone</strong> 从现有 Git 仓库中拷贝项目<br>克隆仓库的命令格式为：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">git <span class=\"hljs-keyword\">clone</span> <span class=\"hljs-title\">&lt;repo</span>&gt;<br></code></pre></td></tr></table></figure>\n\n<p>如果我们需要克隆到指定的目录，可以使用以下命令格式：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">git <span class=\"hljs-keyword\">clone</span> <span class=\"hljs-title\">&lt;repo</span>&gt; <span class=\"hljs-tag\">&lt;directory&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>参数说明：</strong></p>\n<ul>\n<li><strong>repo:</strong> Git 仓库。</li>\n<li><strong>directory:</strong> 本地目录。</li>\n</ul>\n<h3 id=\"Git-基本操作\"><a href=\"#Git-基本操作\" class=\"headerlink\" title=\"Git 基本操作\"></a>Git 基本操作</h3><p>Git 常用的是以下 6 个命令：<strong>git clone</strong>、<strong>git push</strong>、<strong>git add</strong> 、<strong>git commit</strong>、<strong>git checkout</strong>、<strong>git pull</strong><br>![[Pasted image 20230829224733.png]]</p>\n<h4 id=\"Git工作区、暂存库和版本库\"><a href=\"#Git工作区、暂存库和版本库\" class=\"headerlink\" title=\"Git工作区、暂存库和版本库\"></a>Git工作区、暂存库和版本库</h4><ul>\n<li><strong>工作区：</strong> 电脑中的文件目录</li>\n<li><strong>暂存区：</strong> 英文叫 stage 或 index。一般存放在 .git 目录下的 index 文件（.git&#x2F;index）中，所以我们把暂存区有时也叫作索引（index）。</li>\n<li><strong>版本库：</strong> 工作区有一个隐藏目录 .git，这个不算工作区，而是 Git 的版本库。</li>\n</ul>\n<p>User在工作区修改文件，通过<code>git add</code>添加到暂存区，再通过<code>git commit</code>添加到版本库，再通过<code>git push</code>添加到远程仓库</p>\n<p><strong>说明：</strong></p>\n<ul>\n<li>workspace：工作区</li>\n<li>staging area：暂存区&#x2F;缓存区</li>\n<li>local repository：版本库或本地仓库</li>\n<li>remote repository：远程仓库</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>git add</code></td>\n<td>添加文件到暂存区</td>\n</tr>\n<tr>\n<td><code>git status</code></td>\n<td>查看仓库当前的状态，显示有变更的文件。</td>\n</tr>\n<tr>\n<td><code>git diff</code></td>\n<td>比较文件的不同，即暂存区和工作区的差异。</td>\n</tr>\n<tr>\n<td><code>git commit</code></td>\n<td>提交暂存区到本地仓库。</td>\n</tr>\n<tr>\n<td><code>git reset</code></td>\n<td>回退版本。</td>\n</tr>\n<tr>\n<td><code>git rm</code></td>\n<td>将文件从暂存区和工作区中删除。</td>\n</tr>\n<tr>\n<td><code>git mv</code></td>\n<td>移动或重命名工作区文件。</td>\n</tr>\n<tr>\n<td><code>git remote</code></td>\n<td>远程仓库操作</td>\n</tr>\n<tr>\n<td><code>git fetch</code></td>\n<td>从远程获取代码库</td>\n</tr>\n<tr>\n<td><code>git pull</code></td>\n<td>下载远程代码并合并</td>\n</tr>\n<tr>\n<td><code>git push</code></td>\n<td>上传远程代码并合并</td>\n</tr>\n</tbody></table>\n<h3 id=\"Git-分支管理\"><a href=\"#Git-分支管理\" class=\"headerlink\" title=\"Git 分支管理\"></a>Git 分支管理</h3><p>创建分支命令：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">git <span class=\"hljs-title function_\">branch</span> <span class=\"hljs-params\">(branchname)</span><br></code></pre></td></tr></table></figure>\n\n<p>切换分支命令:</p>\n<figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gcode\">git checkout <span class=\"hljs-comment\">(branchname)</span><br></code></pre></td></tr></table></figure>\n\n<p>当你切换分支的时候，Git 会用该分支的最后提交的快照替换你的工作目录的内容， 所以多个分支不需要多个目录。<br>合并分支命令:</p>\n<figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cos\">git <span class=\"hljs-keyword\">merge</span><br></code></pre></td></tr></table></figure>\n<p>![[Pasted image 20230829225716.png]]</p>\n<p>合并后删除无用分支：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">git branch -d newtest</span><br></code></pre></td></tr></table></figure>\n\n"},{"title":"OBGit使用","_content":"\n### Git使用\n第一次使用需要配置用户名和邮箱，这个数据是全局的，不需要重复配置\n```\ngit config --global user.name 用户名  # 配置用户名\ngit config --global user.email  # 配置邮箱\ngit config --global --list  # 检查是否配置成功\n```\n\n### 在Github上配置SSH key\n\n##### 原理\n\n>SSH登录安全性由非对称加密保证，产生密钥时，一次产生两个密钥，一个公钥，一个私钥，在git中一般命名为id_rsa.pub, id_rsa。\n  本地生成一个密钥对，其中公钥放到远程主机，私钥保存在本地\n  当本地主机需要登录远程主机时，本地主机向远程主机发送一个登录请求，远程收到消息后，随机生成一个字符串并用公钥加密，发回给本地。本地拿到该字符串，用存放在本地的私钥进行解密，再次发送到远程，远程比对该解密后的字符串与源字符串是否等同，如果等同则认证成功。\n  **ssh key的配置是针对每台主机的**。\n  目的是在Github上实现免密登录\n\n**第一步：检查本地主机是否已经存在ssh key**\n\n```\ncd ~/.ssh \n   ls \n   //看是否存在 id_rsa 和 id_rsa.pub文件，如果存在，说明已经有SSH Key\n```\n\n**第二步：如果不存在，生成ssh key**\n\n```\nssh-keygen -t rsa -C \"xxx@xxx.com\"\n//执行后一直回车即可\n```\n\n**第三步：获取ssh key公钥内容（id_rsa.pub）**\n\n```\ncd ~/.ssh\ncat id_rsa.pub\n```\n\n**第四步：在Github的Setting中添加key**\n**第五步：验证是否成功**\n\n```\nssh -T git@github.com\n```\n\n### 添加Github远程仓库：\n创建一个Github仓库用于存放笔记\n\n![[Pasted image 20230829165617.png]]\n\n### 配置本地 Obsidian 仓库\n\n```\ntouch README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin \"替换为上图中本条命令位置提示的远端地址（形如 git@gitee.com:user/repo.git）\"\ngit push -u origin main\n```\n\n然后Obsidian Git成功同步笔记：）\n","source":"_posts/Git/Obsidian Git初使用.md","raw":"---\ntitle: OBGit使用\ncategories:\n  - Git\n---\n\n### Git使用\n第一次使用需要配置用户名和邮箱，这个数据是全局的，不需要重复配置\n```\ngit config --global user.name 用户名  # 配置用户名\ngit config --global user.email  # 配置邮箱\ngit config --global --list  # 检查是否配置成功\n```\n\n### 在Github上配置SSH key\n\n##### 原理\n\n>SSH登录安全性由非对称加密保证，产生密钥时，一次产生两个密钥，一个公钥，一个私钥，在git中一般命名为id_rsa.pub, id_rsa。\n  本地生成一个密钥对，其中公钥放到远程主机，私钥保存在本地\n  当本地主机需要登录远程主机时，本地主机向远程主机发送一个登录请求，远程收到消息后，随机生成一个字符串并用公钥加密，发回给本地。本地拿到该字符串，用存放在本地的私钥进行解密，再次发送到远程，远程比对该解密后的字符串与源字符串是否等同，如果等同则认证成功。\n  **ssh key的配置是针对每台主机的**。\n  目的是在Github上实现免密登录\n\n**第一步：检查本地主机是否已经存在ssh key**\n\n```\ncd ~/.ssh \n   ls \n   //看是否存在 id_rsa 和 id_rsa.pub文件，如果存在，说明已经有SSH Key\n```\n\n**第二步：如果不存在，生成ssh key**\n\n```\nssh-keygen -t rsa -C \"xxx@xxx.com\"\n//执行后一直回车即可\n```\n\n**第三步：获取ssh key公钥内容（id_rsa.pub）**\n\n```\ncd ~/.ssh\ncat id_rsa.pub\n```\n\n**第四步：在Github的Setting中添加key**\n**第五步：验证是否成功**\n\n```\nssh -T git@github.com\n```\n\n### 添加Github远程仓库：\n创建一个Github仓库用于存放笔记\n\n![[Pasted image 20230829165617.png]]\n\n### 配置本地 Obsidian 仓库\n\n```\ntouch README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin \"替换为上图中本条命令位置提示的远端地址（形如 git@gitee.com:user/repo.git）\"\ngit push -u origin main\n```\n\n然后Obsidian Git成功同步笔记：）\n","slug":"Git/Obsidian Git初使用","published":1,"date":"2023-09-19T12:38:33.934Z","updated":"2023-09-19T12:40:04.622Z","_id":"clmqayxn800038cu52jw193tz","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"Git使用\"><a href=\"#Git使用\" class=\"headerlink\" title=\"Git使用\"></a>Git使用</h3><p>第一次使用需要配置用户名和邮箱，这个数据是全局的，不需要重复配置</p>\n<figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dsconfig\"><span class=\"hljs-string\">git</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-built_in\">--global</span> <span class=\"hljs-string\">user</span>.<span class=\"hljs-string\">name</span> 用户名  <span class=\"hljs-comment\"># 配置用户名</span><br><span class=\"hljs-string\">git</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-built_in\">--global</span> <span class=\"hljs-string\">user</span>.<span class=\"hljs-string\">email</span>  <span class=\"hljs-comment\"># 配置邮箱</span><br><span class=\"hljs-string\">git</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-built_in\">--global</span> <span class=\"hljs-built_in\">--list</span>  <span class=\"hljs-comment\"># 检查是否配置成功</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"在Github上配置SSH-key\"><a href=\"#在Github上配置SSH-key\" class=\"headerlink\" title=\"在Github上配置SSH key\"></a>在Github上配置SSH key</h3><h5 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h5><blockquote>\n<p>SSH登录安全性由非对称加密保证，产生密钥时，一次产生两个密钥，一个公钥，一个私钥，在git中一般命名为id_rsa.pub, id_rsa。<br>  本地生成一个密钥对，其中公钥放到远程主机，私钥保存在本地<br>  当本地主机需要登录远程主机时，本地主机向远程主机发送一个登录请求，远程收到消息后，随机生成一个字符串并用公钥加密，发回给本地。本地拿到该字符串，用存放在本地的私钥进行解密，再次发送到远程，远程比对该解密后的字符串与源字符串是否等同，如果等同则认证成功。<br>  <strong>ssh key的配置是针对每台主机的</strong>。<br>  目的是在Github上实现免密登录</p>\n</blockquote>\n<p><strong>第一步：检查本地主机是否已经存在ssh key</strong></p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\"><span class=\"hljs-keyword\">cd</span> ~<span class=\"hljs-string\">/.ssh</span> <br>   <span class=\"hljs-keyword\">ls</span> <br>   <span class=\"hljs-string\">//</span>看是否存在 id_rsa 和 id_rsa.pub文件，如果存在，说明已经有SSH Key<br></code></pre></td></tr></table></figure>\n\n<p><strong>第二步：如果不存在，生成ssh key</strong></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">ssh-keygen -t rsa -C <span class=\"hljs-string\">&quot;xxx@xxx.com&quot;</span><br><span class=\"hljs-regexp\">//</span>执行后一直回车即可<br></code></pre></td></tr></table></figure>\n\n<p><strong>第三步：获取ssh key公钥内容（id_rsa.pub）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cd</span> ~/.ssh<br><span class=\"hljs-built_in\">cat</span> id_rsa.pub<br></code></pre></td></tr></table></figure>\n\n<p><strong>第四步：在Github的Setting中添加key</strong><br><strong>第五步：验证是否成功</strong></p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">ssh</span> -T git<span class=\"hljs-variable\">@github</span>.com<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加Github远程仓库：\"><a href=\"#添加Github远程仓库：\" class=\"headerlink\" title=\"添加Github远程仓库：\"></a>添加Github远程仓库：</h3><p>创建一个Github仓库用于存放笔记</p>\n<p>![[Pasted image 20230829165617.png]]</p>\n<h3 id=\"配置本地-Obsidian-仓库\"><a href=\"#配置本地-Obsidian-仓库\" class=\"headerlink\" title=\"配置本地 Obsidian 仓库\"></a>配置本地 Obsidian 仓库</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">touch README.md<br>git init<br>git <span class=\"hljs-keyword\">add </span>README.md<br>git commit -m <span class=\"hljs-string\">&quot;first commit&quot;</span><br>git <span class=\"hljs-keyword\">branch </span>-M main<br>git remote <span class=\"hljs-keyword\">add </span><span class=\"hljs-keyword\">origin </span><span class=\"hljs-string\">&quot;替换为上图中本条命令位置提示的远端地址（形如 git@gitee.com:user/repo.git）&quot;</span><br>git push -u <span class=\"hljs-keyword\">origin </span>main<br></code></pre></td></tr></table></figure>\n\n<p>然后Obsidian Git成功同步笔记：）</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Git使用\"><a href=\"#Git使用\" class=\"headerlink\" title=\"Git使用\"></a>Git使用</h3><p>第一次使用需要配置用户名和邮箱，这个数据是全局的，不需要重复配置</p>\n<figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dsconfig\"><span class=\"hljs-string\">git</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-built_in\">--global</span> <span class=\"hljs-string\">user</span>.<span class=\"hljs-string\">name</span> 用户名  <span class=\"hljs-comment\"># 配置用户名</span><br><span class=\"hljs-string\">git</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-built_in\">--global</span> <span class=\"hljs-string\">user</span>.<span class=\"hljs-string\">email</span>  <span class=\"hljs-comment\"># 配置邮箱</span><br><span class=\"hljs-string\">git</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-built_in\">--global</span> <span class=\"hljs-built_in\">--list</span>  <span class=\"hljs-comment\"># 检查是否配置成功</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"在Github上配置SSH-key\"><a href=\"#在Github上配置SSH-key\" class=\"headerlink\" title=\"在Github上配置SSH key\"></a>在Github上配置SSH key</h3><h5 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h5><blockquote>\n<p>SSH登录安全性由非对称加密保证，产生密钥时，一次产生两个密钥，一个公钥，一个私钥，在git中一般命名为id_rsa.pub, id_rsa。<br>  本地生成一个密钥对，其中公钥放到远程主机，私钥保存在本地<br>  当本地主机需要登录远程主机时，本地主机向远程主机发送一个登录请求，远程收到消息后，随机生成一个字符串并用公钥加密，发回给本地。本地拿到该字符串，用存放在本地的私钥进行解密，再次发送到远程，远程比对该解密后的字符串与源字符串是否等同，如果等同则认证成功。<br>  <strong>ssh key的配置是针对每台主机的</strong>。<br>  目的是在Github上实现免密登录</p>\n</blockquote>\n<p><strong>第一步：检查本地主机是否已经存在ssh key</strong></p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\"><span class=\"hljs-keyword\">cd</span> ~<span class=\"hljs-string\">/.ssh</span> <br>   <span class=\"hljs-keyword\">ls</span> <br>   <span class=\"hljs-string\">//</span>看是否存在 id_rsa 和 id_rsa.pub文件，如果存在，说明已经有SSH Key<br></code></pre></td></tr></table></figure>\n\n<p><strong>第二步：如果不存在，生成ssh key</strong></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">ssh-keygen -t rsa -C <span class=\"hljs-string\">&quot;xxx@xxx.com&quot;</span><br><span class=\"hljs-regexp\">//</span>执行后一直回车即可<br></code></pre></td></tr></table></figure>\n\n<p><strong>第三步：获取ssh key公钥内容（id_rsa.pub）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cd</span> ~/.ssh<br><span class=\"hljs-built_in\">cat</span> id_rsa.pub<br></code></pre></td></tr></table></figure>\n\n<p><strong>第四步：在Github的Setting中添加key</strong><br><strong>第五步：验证是否成功</strong></p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">ssh</span> -T git<span class=\"hljs-variable\">@github</span>.com<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加Github远程仓库：\"><a href=\"#添加Github远程仓库：\" class=\"headerlink\" title=\"添加Github远程仓库：\"></a>添加Github远程仓库：</h3><p>创建一个Github仓库用于存放笔记</p>\n<p>![[Pasted image 20230829165617.png]]</p>\n<h3 id=\"配置本地-Obsidian-仓库\"><a href=\"#配置本地-Obsidian-仓库\" class=\"headerlink\" title=\"配置本地 Obsidian 仓库\"></a>配置本地 Obsidian 仓库</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">touch README.md<br>git init<br>git <span class=\"hljs-keyword\">add </span>README.md<br>git commit -m <span class=\"hljs-string\">&quot;first commit&quot;</span><br>git <span class=\"hljs-keyword\">branch </span>-M main<br>git remote <span class=\"hljs-keyword\">add </span><span class=\"hljs-keyword\">origin </span><span class=\"hljs-string\">&quot;替换为上图中本条命令位置提示的远端地址（形如 git@gitee.com:user/repo.git）&quot;</span><br>git push -u <span class=\"hljs-keyword\">origin </span>main<br></code></pre></td></tr></table></figure>\n\n<p>然后Obsidian Git成功同步笔记：）</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clmqayxn700028cu5epgf4pyr","category_id":"clmqazdwk0000lwu53yz7653k","_id":"clmqazdwm0001lwu58hx9115n"},{"post_id":"clmqayxn800038cu52jw193tz","category_id":"clmqazdwk0000lwu53yz7653k","_id":"clmqazdwt0002lwu578tth2ki"}],"PostTag":[],"Tag":[]}}